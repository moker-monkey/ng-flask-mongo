# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
services:
  web:
    container_name: nginx
    image: nginx:1.22.1
    volumes:
      - ./nginx/nginx.conf:/tmp/nginx.conf #用于放置配置
      - ./app:/usr/share/nginx/html #用于放置业务的静态文件
      - ./ssl:/etc/nginx/ssl #用于放置https的证书
    environment: 
      - FLASK_SERVER_ADDR=backend:9091
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      
  backend:
    container_name: flask
    build:
      context: flask
      target: builder
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    environment:
      - FLASK_SERVER_PORT=9091
    volumes:
      - ./flask:/src
    depends_on:
      -  mongo 

  mongo:
    container_name: mongo
    image: mongo:4.2.21
    restart: 'always'
    environment:
      - AUTH=yes
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=KunGe@2024
    ports:
      - 27017:27017
    volumes:
    # 记得修改挂载的卷
      - ./mongo/data:/data/db
      - ./mongo/logs:/dev/mongo/log
